plugins {
    id 'java'
    id 'maven'
    id 'com.github.johnrengelman.shadow' version '1.2.2'
}

group 'com.github.jasoma'
version '2.7'

dependencies {
    compile fileTree(dir: 'build/gradle-dist', include: '**/lib/*.jar')
}

shadowJar {
    baseName = 'gradle-repackaged'
    classifier = ''
}

task createWrapper(type: Wrapper) {
    gradleVersion = "$version"
    distributionBase = 'PROJECT'
    distributionPath = 'build/gradle-dist'
    archiveBase = 'PROJECT'
    archivePath = 'build/gradle-dist'
    jarFile = 'build/wrapper-dist/gradle-wrapper.jar'
    scriptFile = 'build/wrapper-dist/gradlew'
}

task downloadDist(type: Exec, dependsOn: createWrapper) {
    commandLine 'build/wrapper-dist/gradlew'
}

shadowJar.dependsOn('downloadDist')
build.dependsOn('shadowJar')
install.dependsOn('shadowJar')

task buildMavenProject(type: Exec, dependsOn: 'install') {
    workingDir 'examples/gradle-plugin'
    executable 'mvn'
    args 'clean', 'package'
}

task runGradlePlugin(type: GradleBuild, dependsOn: 'buildMavenProject') {
    dir = 'examples/gradle-plugin-consumer'
    tasks = ['clean', 'hello']
}

task checkPluginOutput(dependsOn: 'runGradlePlugin') {
    def helloTxt = file('examples/gradle-plugin-consumer/build/hello-world.txt')
    if (!helloTxt.exists()) {
        throw new GradleException("Tests failed: Plugin did not create the expected test file")
    }
}

test.dependsOn('checkPluginOutput')
